# 10 younger drivers ever
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
SELECT ?name ?bdate WHERE { 
	?driver a :Driver ;
    :hasForename ?fname ;
    :hasSurname ?sname ;
    :hasDateOfBirth ?bdate .
    BIND(CONCAT(?fname, " ", ?sname) AS ?name).
} 
ORDER BY DESC (?bdate)
LIMIT 10

----

# Drivers who partecipated in the 2023 season
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
SELECT ?name WHERE { 
    ?season :hasYear "2023"^^xsd:integer;
            a :Season.
    ?race :inSeason ?season;
          a :Race.
    ?racePart :partecipatedInRace ?race;
              :hasDriver ?driver.
    ?driver a :Driver;
            :hasForename ?fname;
            :hasSurname ?sname.
    BIND(CONCAT(?fname, " ", ?sname) AS ?name).
} GROUP BY (?name)

----

# Final 2022 season driver's classification
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
SELECT ?name (MAX(?totPoints) AS ?finalPoints) WHERE {
    ?season :hasYear "2022"^^xsd:integer;
            a :Season.
    ?race :inSeason ?season;
          a :Race.
    ?racePart :partecipatedInRace ?race;
              :hasTotalPoints ?totPoints;
              :hasDriver ?driver;
              a :RacePartecipation.
    ?driver :hasForename ?fname;
            :hasSurname ?sname;
            a :Driver.
    BIND(CONCAT(?fname, " ", ?sname) AS ?name).
}
GROUP BY (?name)
ORDER BY DESC (?finalPoints)

----

# Final 2022 season constructor's classification
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
SELECT ?name (MAX(?totPoints) AS ?finalPoints) WHERE {
    ?season :hasYear "2022"^^xsd:integer;
            a :Season.
    ?race :inSeason ?season;
          a :Race.
    ?racePart :partecipatedInRace ?race;
              :hasConstructorTotalPoints ?totPoints;
              :hasConstructor ?constructor;
              a :RacePartecipation.
    ?constructor :hasName ?name;
            a :Constructor.
}
GROUP BY (?name)
ORDER BY DESC (?finalPoints)

----

# Complete name of the driver winner of 2021 season
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
SELECT (?name AS ?2021winnersName) WHERE {
    {
		SELECT ?name (MAX(?totPoints) AS ?finalPoints) WHERE {
    		?season :hasYear "2021"^^xsd:integer;
            		a :Season.
    		?race :inSeason ?season;
          		a :Race.
    		?racePart :partecipatedInRace ?race;
              		:hasTotalPoints ?totPoints;
              		:hasDriver ?driver;
              		a :RacePartecipation.
    		?driver :hasForename ?fname;
            		:hasSurname ?sname;
            		a :Driver.
    		BIND(CONCAT(?fname, " ", ?sname) AS ?name).
		}
		GROUP BY (?name)
		ORDER BY DESC (?finalPoints)
    }
} 
LIMIT 1

----

# Name of the constructor team winner of 2021 season
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
SELECT (?name AS ?2021winnersName) WHERE {
    {
		SELECT ?name (MAX(?totPoints) AS ?finalPoints) WHERE {
    		?season :hasYear "2021"^^xsd:integer;
            		a :Season.
    		?race :inSeason ?season;
          		a :Race.
    		?racePart :partecipatedInRace ?race;
              		:hasConstructorTotalPoints ?totPoints;
              		:hasConstructor ?constructor;
              		a :RacePartecipation.
    		?constructor :hasName ?name;
            		a :Constructor.
		}
		GROUP BY (?name)
		ORDER BY DESC (?finalPoints)
    }
} 
LIMIT 1

----

# Complete names of the 20 drivers with the most pit stops made with a single constructor.
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
SELECT ?name (?cname AS ?constructorName) (SUM(?maxNumb) AS ?totalPitStops) WHERE{
    {
        SELECT ?partecipation ?name ?cname (MAX(?numb) AS ?maxNumb) WHERE { 
            ?driver :hasForename ?fname ;
                    :hasSurname ?sname .
            ?partecipation :hasDriver ?driver ;
                           :hasPitStop ?stop ;
                           :hasConstructor ?constructor .
            ?constructor :hasName ?cname .
            ?stop :hasStopNumber ?numb .
            BIND(CONCAT(?fname, " ", ?sname) AS ?name).
        }
        GROUP BY ?partecipation ?name ?cname
    }
}
GROUP BY ?name ?cname
ORDER BY DESC(?totalPitStops)
LIMIT 20

----

# 2023 drivers ordered by maximum rating value
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
SELECT ?name (MAX(?ratVal) as ?maxRating) WHERE {
    ?season :hasYear "2023"^^xsd:integer;
            a :Season.
    ?rating :inSeason ?season;
            :hasDriver ?driver;
            :hasRating ?ratVal;
          	a :Rating.
    ?driver a :Driver;
            :hasForename ?fname;
            :hasSurname ?sname.
    BIND(CONCAT(?fname, " ", ?sname) AS ?name).
}
GROUP BY (?name)
ORDER BY DESC (?maxRating)

----

# Most payed driver of 2023 season
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
SELECT ?name (MAX(?sal) as ?salary) WHERE {
    ?season :hasYear "2023"^^xsd:integer;
            a :Season.
    ?rating :inSeason ?season;
            :hasDriver ?driver;
            :hasSalary ?sal;
          	a :Rating.
    ?driver a :Driver;
            :hasForename ?fname;
            :hasSurname ?sname.
    BIND(CONCAT(?fname, " ", ?sname) AS ?name).
}
GROUP BY (?name)
ORDER BY DESC (?salary)

----

# Circuits in F1 history
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
SELECT ?name WHERE { 
    ?race :hasCircuit ?circuit;
          a :Race.
    ?circuit :hasName ?name;
             a :Circuit.
} GROUP BY (?name)

----

# Winner of 2021 Monza grand prix
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
SELECT ?name WHERE { 
    ?season :hasYear "2021"^^xsd:integer;
            a :Season.
    ?race :inSeason ?season;
          :hasCircuit ?circuit;
          a :Race.
    ?circuit :hasName "Autodromo Nazionale di Monza";
             a :Circuit.
    ?racePart :partecipatedInRace ?race;
              :hasPositionOrder "1"^^xsd:integer;
              :hasDriver ?driver.
    ?driver a :Driver;
            :hasForename ?fname;
            :hasSurname ?sname.
    BIND(CONCAT(?fname, " ", ?sname) AS ?name).
}

----

# Name of all the drivers who won a Monza grand prix
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
SELECT ?name WHERE { 
    ?race :hasCircuit ?circuit;
          a :Race.
    ?circuit :hasName "Autodromo Nazionale di Monza";
             a :Circuit.
    ?racePart :partecipatedInRace ?race;
              :hasPositionOrder "1"^^xsd:integer;
              :hasDriver ?driver.
    ?driver a :Driver;
            :hasForename ?fname;
            :hasSurname ?sname.
    BIND(CONCAT(?fname, " ", ?sname) AS ?name).
} GROUP BY (?name)

----

# All the drivers who won a Monza grand prix, ordered by number of wins
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
SELECT ?name (COUNT(?name) as ?numOfWins) WHERE { 
    ?race :hasCircuit ?circuit;
          a :Race.
    ?circuit :hasName "Autodromo Nazionale di Monza";
             a :Circuit.
    ?racePart :partecipatedInRace ?race;
              :hasPositionOrder "1"^^xsd:integer;
              :hasDriver ?driver.
    ?driver a :Driver;
            :hasForename ?fname;
            :hasSurname ?sname.
    BIND(CONCAT(?fname, " ", ?sname) AS ?name).
} GROUP BY (?name)
ORDER BY DESC (?numOfWins)

----

# All the drivers who won an Imola grand prix, ordered by number of wins
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
SELECT ?name (COUNT(?name) as ?numOfWins) WHERE { 
    ?race :hasCircuit ?circuit;
          a :Race.
    ?circuit :hasName "Autodromo Enzo e Dino Ferrari";
             a :Circuit.
    ?racePart :partecipatedInRace ?race;
              :hasPositionOrder "1"^^xsd:integer;
              :hasDriver ?driver.
    ?driver a :Driver;
            :hasForename ?fname;
            :hasSurname ?sname.
    BIND(CONCAT(?fname, " ", ?sname) AS ?name).
} GROUP BY (?name)
ORDER BY DESC (?numOfWins)

----

# All the drivers who won an italian grand prix, ordered by number of wins
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX countries: <http://eulersharp.sourceforge.net/2003/03swap/countries#>
SELECT ?name (COUNT(?name) as ?numOfWins) WHERE { 
    ?race :hasCircuit ?circuit;
          a :Race.
    ?circuit :hasLocation ?location;
             a :Circuit.
    ?location :hasCountry countries:it;
              a :Location.
    ?racePart :partecipatedInRace ?race;
              :hasPositionOrder "1"^^xsd:integer;
              :hasDriver ?driver.
    ?driver a :Driver;
            :hasForename ?fname;
            :hasSurname ?sname.
    BIND(CONCAT(?fname, " ", ?sname) AS ?name).
} GROUP BY (?name)
ORDER BY DESC (?numOfWins)

----

# All the drivers who won an italian grand prix, driving an italian car, ordered by number of wins
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX countries: <http://eulersharp.sourceforge.net/2003/03swap/countries#>
SELECT ?name (COUNT(?name) as ?numOfWins) ?consName WHERE { 
    ?race :hasCircuit ?circuit;
          a :Race.
    ?circuit :hasLocation ?location;
             a :Circuit.
    ?location :hasCountry countries:it;
              a :Location.
    ?racePart :partecipatedInRace ?race;
              :hasPositionOrder "1"^^xsd:integer;
              :hasConstructor ?constructor;
              :hasDriver ?driver.
    ?constructor a :Constructor;
                 :hasName ?consName;
                 :hasNation countries:it.
    ?driver a :Driver;
            :hasForename ?fname;
            :hasSurname ?sname.
    BIND(CONCAT(?fname, " ", ?sname) AS ?name).
} GROUP BY ?name ?consName
ORDER BY DESC (?numOfWins)

----

# All the italian drivers who won an italian grand prix, driving an italian car, ordered by number of wins
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX countries: <http://eulersharp.sourceforge.net/2003/03swap/countries#>
SELECT ?name (COUNT(?name) as ?numOfWins) ?consName WHERE { 
    ?race :hasCircuit ?circuit;
          a :Race.
    ?circuit :hasLocation ?location;
             a :Circuit.
    ?location :hasCountry countries:it;
              a :Location.
    ?racePart :partecipatedInRace ?race;
              :hasPositionOrder "1"^^xsd:integer;
              :hasConstructor ?constructor;
              :hasDriver ?driver.
    ?constructor a :Constructor;
                 :hasName ?consName;
                 :hasNation countries:it.
    ?driver a :Driver;
            :hasNation countries:it;
            :hasForename ?fname;
            :hasSurname ?sname.
    BIND(CONCAT(?fname, " ", ?sname) AS ?name).
} GROUP BY ?name ?consName
ORDER BY DESC (?numOfWins)

----

# All the english (Great Britain) drivers who won an english grand prix, driving an english car, ordered by number of wins
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX countries: <http://eulersharp.sourceforge.net/2003/03swap/countries#>
SELECT ?name (COUNT(?name) as ?numOfWins) ?consName WHERE { 
    ?race :hasCircuit ?circuit;
          a :Race.
    ?circuit :hasLocation ?location;
             a :Circuit.
    ?location :hasCountry countries:gb;
              a :Location.
    ?racePart :partecipatedInRace ?race;
              :hasPositionOrder "1"^^xsd:integer;
              :hasConstructor ?constructor;
              :hasDriver ?driver.
    ?constructor a :Constructor;
                 :hasName ?consName;
                 :hasNation countries:gb.
    ?driver a :Driver;
            :hasNation countries:gb;
            :hasForename ?fname;
            :hasSurname ?sname.
    BIND(CONCAT(?fname, " ", ?sname) AS ?name).
} GROUP BY ?name ?consName
ORDER BY DESC (?numOfWins)

----

# All the english (Great Britain) drivers who won an english grand prix, ordered by number of wins
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX countries: <http://eulersharp.sourceforge.net/2003/03swap/countries#>
SELECT ?name (COUNT(?name) as ?numOfWins) WHERE { 
    ?race :hasCircuit ?circuit;
          a :Race.
    ?circuit :hasLocation ?location;
             a :Circuit.
    ?location :hasCountry countries:gb;
              a :Location.
    ?racePart :partecipatedInRace ?race;
              :hasPositionOrder "1"^^xsd:integer;
              :hasDriver ?driver.
    ?driver a :Driver;
            :hasNation countries:gb;
            :hasForename ?fname;
            :hasSurname ?sname.
    BIND(CONCAT(?fname, " ", ?sname) AS ?name).
} GROUP BY ?name
ORDER BY DESC (?numOfWins)

----

# All the italian drivers who won an italian grand prix, ordered by number of wins
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX countries: <http://eulersharp.sourceforge.net/2003/03swap/countries#>
SELECT ?name (COUNT(?name) as ?numOfWins) WHERE {
    ?race :hasCircuit ?circuit;
          a :Race.
    ?circuit :hasLocation ?location;
             a :Circuit.
    ?location :hasCountry countries:it;
              a :Location.
    ?racePart :partecipatedInRace ?race;
              :hasPositionOrder "1"^^xsd:integer;
              :hasDriver ?driver.
    ?driver a :Driver;
            :hasNation countries:it;
            :hasForename ?fname;
            :hasSurname ?sname.
    BIND(CONCAT(?fname, " ", ?sname) AS ?name).
} GROUP BY ?name
ORDER BY DESC (?numOfWins)

----

# The most winning italian driver in F1 history
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX countries: <http://eulersharp.sourceforge.net/2003/03swap/countries#>
SELECT ?name (COUNT(?name) as ?numOfWins) WHERE { 
    ?race :hasCircuit ?circuit;
          a :Race.
    ?racePart :partecipatedInRace ?race;
              :hasPositionOrder "1"^^xsd:integer;
              :hasDriver ?driver.
    ?driver a :Driver;
            :hasNation countries:it;
            :hasForename ?fname;
            :hasSurname ?sname.
    BIND(CONCAT(?fname, " ", ?sname) AS ?name).
} GROUP BY ?name
ORDER BY DESC (?numOfWins)
LIMIT 1

----

# The 5 most winning drivers in F1 history, ordered by number of grand prix wins
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
SELECT ?name (COUNT(?name) as ?numOfWins) WHERE { 
    ?race :hasCircuit ?circuit;
          a :Race.
    ?racePart :partecipatedInRace ?race;
              :hasPositionOrder "1"^^xsd:integer;
              :hasDriver ?driver.
    ?driver a :Driver;
            :hasForename ?fname;
            :hasSurname ?sname.
    BIND(CONCAT(?fname, " ", ?sname) AS ?name).
} GROUP BY ?name
ORDER BY DESC (?numOfWins)
LIMIT 5

----

# The name of the driver who drove the fastest lap in F1 history, the lap time and the circuit
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
SELECT ?driversName (MIN(?lapTime) as ?fastestLap) ?circuitName WHERE {
    ?racePart :hasLap ?lap;
              :hasDriver ?driver;
              :partecipatedInRace ?race;
              a :RacePartecipation.
    ?race a :Race;
          :hasCircuit ?circ.
    ?circ a :Circuit;
             :hasName ?circuitName.
    ?lap a :Lap;
         :hasLapTime ?lapTime.
    ?driver a :Driver;
            :hasForename ?fname;
            :hasSurname ?sname.
    BIND(CONCAT(?fname, " ", ?sname) AS ?driversName).
} GROUP BY ?driversName ?circuitName
ORDER BY (?fastestLap)
LIMIT 1

----

# The name of the driver who drove the fastest lap in F1 history, the lap time, the circuit and the race name
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
SELECT ?driversName (MIN(?lapTime) as ?fastestLap) ?circuitName ?raceName WHERE {
    ?racePart :hasLap ?lap;
              :hasDriver ?driver;
              :partecipatedInRace ?race;
              a :RacePartecipation.
    ?race a :Race;
          :hasName ?raceName;
          :hasCircuit ?circ.
    ?circ a :Circuit;
             :hasName ?circuitName.
    ?lap a :Lap;
         :hasLapTime ?lapTime.
    ?driver a :Driver;
            :hasForename ?fname;
            :hasSurname ?sname.
    BIND(CONCAT(?fname, " ", ?sname) AS ?driversName).
} GROUP BY ?driversName ?circuitName ?raceName
ORDER BY (?fastestLap)
LIMIT 1

----

# The name of the driver who drove the slowest lap in F1 history, the lap time, the circuit, the race name and the race date
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
SELECT ?driversName (MAX(?lapTime) as ?slowestLap) ?circuitName ?raceName ?raceDate WHERE {
    ?racePart :hasLap ?lap;
              :hasDriver ?driver;
              :partecipatedInRace ?race;
              a :RacePartecipation.
    ?race a :Race;
          :hasName ?raceName;
          :hasDate ?raceDate;
          :hasCircuit ?circ.
    ?circ a :Circuit;
             :hasName ?circuitName.
    ?lap a :Lap;
         :hasLapTime ?lapTime.
    ?driver a :Driver;
            :hasForename ?fname;
            :hasSurname ?sname.
    BIND(CONCAT(?fname, " ", ?sname) AS ?driversName).
} GROUP BY ?driversName ?circuitName ?raceName ?raceDate
ORDER BY DESC (?slowestLap)
LIMIT 1

----

# Data of 10 slowest laps in F1 history
PREFIX : <https://www.dei.unipd.it/db2/groupProject/FASTianF1#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
SELECT ?driversName (MAX(?lapTime) as ?slowestLap) ?circuitName ?raceName ?raceDate WHERE {
    ?racePart :hasLap ?lap;
              :hasDriver ?driver;
              :partecipatedInRace ?race;
              a :RacePartecipation.
    ?race a :Race;
          :hasName ?raceName;
          :hasDate ?raceDate;
          :hasCircuit ?circ.
    ?circ a :Circuit;
             :hasName ?circuitName.
    ?lap a :Lap;
         :hasLapTime ?lapTime.
    ?driver a :Driver;
            :hasForename ?fname;
            :hasSurname ?sname.
    BIND(CONCAT(?fname, " ", ?sname) AS ?driversName).
} GROUP BY ?driversName ?circuitName ?raceName ?raceDate
ORDER BY DESC (?slowestLap)
LIMIT 1

----

